{% if has_any_endpoints -%}
pub mod endpoints;
{%- endif -%}
pub(super) mod entity;
pub mod queries;
{% if file_upload -%}
pub mod storage;
{%- endif -%}
#[cfg(test)]
pub mod testing;
pub mod types;

pub use entity::{ActiveModel, Column, Model, PrimaryKey, Relation};
/// The base entity allows executing any query but does not automatically attach auth checks. You
/// should often use Entity instead, which is a wrapper that automatically checks for authorization on
/// any query.
pub use entity::Entity as BaseEntity;
pub use entity::AuthedEntity as Entity;
pub use types::*;

pub const NAME: &str = "{{name}}";
pub const READ_PERMISSION: &str = "{{read_permission}}";
pub const WRITE_PERMISSION: &str = "{{write_permission}}";
pub const OWNER_PERMISSION: &str = "{{owner_permission}}";
{# Eventually this will be configurable as either owner or write, and will need to be something else for object-based permissions too #}
pub const CREATE_PERMISSION: &str = "{{owner_permission}}";

{% if predefined_object_id  %}
pub type {{id_type}} = filigree::auth::{{id_type}};
{% else %}
filigree::make_object_id!({{id_type}}, {{id_prefix}});
{% endif %}

