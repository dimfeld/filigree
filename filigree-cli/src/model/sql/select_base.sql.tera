{% import "model/sql_macros.tera" as macros %}
SELECT
  {% block select_fields %}
  {{ fields
    | filter(attribute='never_read', value=false)
    | map(attribute='sql_full_name')
    | join(sep=', ') }}
  {% endblock select_fields %}
  {% if populate_children %}
    {% for c in children %}
      {% if c.relationship.populate_on_get == 'id' %}
        , (
          SELECT
            {% if c.relationship.many -%}COALESCE(ARRAY_AGG({%- endif -%}
              {{c.table}}.id
            {%- if c.relationship.many -%}), ARRAY[]::uuid[]){%- endif -%}
          FROM {{c.schema}}.{{c.table}}
          WHERE {{c.parent_field}} = $1 AND organization_id=$2
          {% if not c.relationship.many %}LIMIT 1{% endif %}
        ) AS "{{c.full_get_sql_field_name}}"
      {% elif c.relationship.populate_on_get == 'data' %}
        , (
          SELECT
            {% if c.relationship.many -%}COALESCE(ARRAY_AGG({%- endif -%}
              JSONB_BUILD_OBJECT(
                {% for field in c.fields %}
                '{{field.rust_name}}', {{field.sql_name}}{% if not loop.last %},{% endif %}
                {% endfor %}
              )
            {%- if c.relationship.many -%}), ARRAY[]::jsonb[]){%- endif -%}
          FROM {{c.schema}}.{{c.table}}
          WHERE {{c.parent_field}} = $1 AND organization_id=$2
          {% if not c.relationship.many %}LIMIT 1{% endif %}
        ) AS "{{c.full_get_sql_field_name}}"
      {% endif %}
    {% endfor %}

    {% for r in reference_populations | filter(attribute="on_get", value=true) %}
    , CASE WHEN ref_{{r.name}}.id IS NOT NULL THEN
      JSONB_BUILD_OBJECT(
        {% for field in r.fields %}
          '{{field.rust_name}}', ref_{{r.name}}.{{field.sql_name}}{% if not loop.last %},{% endif %}
        {% endfor %}
      )
      ELSE NULL
    END AS "{{r.full_name}}"
    {% endfor %}
  {% endif %}
FROM
  {{schema}}.{{ table }} tb
{% if populate_children %}
  {% for r in reference_populations | filter(attribute="on_get", value=true) %}
    LEFT JOIN {{r.table}} ref_{{r.name}} ON {{r.table}}.id = tb.{{r.id_field}}
  {% endfor %}
{% endif %}
{% if auth_check_in_query %}
JOIN LATERAL ({{ macros::permissions_value(
      auth_schema=auth_schema,
      auth_scope=auth_scope,
      object_id="$1",
      organization="$2",
      actor_ids="$3",
      owner_perm=owner_permission,
      read_perm=read_permission,
      write_perm=write_permission
  )}}) _permission ON _permission IS NOT NULL
{% endif %}
WHERE
  tb.id = $1
  {% if not global %}
    AND tb.organization_id = $2
  {% endif %}



