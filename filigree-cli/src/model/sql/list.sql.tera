{% import "sql_macros.tera" as macros %}

{# See if any field is filterable #}
{% set has_filterable = false %}
{% for field in fields %}
  {% if field.filterable != 'none' %}
    {% set has_filterable = true %}
  {% endif %}
{% endfor %}

SELECT
  {{ fields
    | filter(attribute='owner_read', value=true)
    | map(attribute='sql_full_name')
    | join(sep=',') }},
  _permission
FROM
  {{ table }} tb
JOIN LATERAL (
  {{ macros::permissions_value(
      auth_scope=auth_scope,
      organization="$1",
      actor_ids="$2",
      object_id="tb.id",
      owner_perm=owner_permission,
      read_perm=read_permission,
      write_perm=write_permission
  )}}
) _permission ON _permission IS NOT NULL

WHERE
{% if not global %}
   AND organization_id = $1 
{% endif %}
{% if has_filterable %}
  AND <filters>
{% endif %}

ORDER BY <order_by>
{% if not pagination.disable %}
LIMIT $3
OFFSET $4
{% endif %}

