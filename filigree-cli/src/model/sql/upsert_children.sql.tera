{% if belongs_to_field %}
-- $1 = has owner permission on the model
-- $2 = organization_id
-- $3 = parent_id
INSERT INTO {{table}}
(
  id,
  {% if not global %}
  organization_id,
  {% endif %}
  {{ fields
    | filter(attribute='owner_write', value=true)
    | map(attribute='sql_name')
    | join(sep=', ') }}
)

VALUES

__insertion_point_insert_values

ON CONFLICT(id) DO UPDATE
SET
  {% for field in fields | filter(attribute='owner_write', value=true) %}
    {% if field.user_write %}
      {{field.sql_name}} = EXCLUDED.{{field.sql_name}},
    {% else %}
      {{field.sql_name}} = CASE WHEN $1 THEN EXCLUDED.{{field.sql_name}} ELSE {{table}}.{{field.sql_name}} END,
    {% endif %}
  {% endfor %}
  updated_at = now()
WHERE
{% if global %}
  {{table}}.{{belongs_to_field.sql_name}} = $2
{% else %}
  {{table}}.organization_id = $2 AND {{table}}.{{belongs_to_field.sql_name}} = $3
{% endif %}

RETURNING
{{ fields | filter(attribute='never_read', value=false) | map(attribute='sql_name') |  join(sep=', ') }},
'owner' AS "_permission"

{% endif %}
