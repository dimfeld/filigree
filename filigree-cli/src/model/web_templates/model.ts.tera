import type { ModelDefinition } from 'filigree-web';
import { z } from 'zod';
import { ObjectPermission } from '../model_types.js';
{{ts_imports}}

{% for struct in structs %}
export const {{struct.name}}Schema = z.object({
  {{struct.zod_fields_content}}
});

export type {{struct.name}} = z.infer<typeof {{struct.name}}Schema>;
{% for alias in struct.aliases -%}
export const {{alias}}Schema = {{struct.name}}Schema;
export type {{alias}} = {{struct.name}};
{% endfor %}

{%- endfor %}

export const {{name}}Model : ModelDefinition<typeof {{struct_base}}Schema> = {
  name: "{{name}}",
  plural: "{{plural}}",
  url: "{{url_path}}",
  schema: {{struct_base}}Schema,
  fields: [
    {% for field in fields -%}
    {
      name: "{{field.name}}",
      type: "{{field.client_type}}",
      label: "{{field.label}}",
      {% if field.description -%}
      description: "{{field.description}}",
      {%- endif -%}
      constraints: {
        required: {{not field.nullable}}
      },
    },
    {%- endfor %}
  ],
};

