WITH base_lookup AS (
  {% block base_lookup %}{% endblock base_lookup %}
),
role_lookup AS (
  SELECT role_id, organization_id
  FROM user_roles
  JOIN base_lookup USING (user_id, organization_id)
),
actor_ids AS (
{% block actor_ids %}
  SELECT user_id as actor_id, organization_id FROM base_lookup
  UNION ALL
  SELECT role_id as actor_id, organization_id FROM role_lookup
{% endblock actor_ids %}
),
permissions AS (
  SELECT ARRAY_AGG(DISTINCT permission) AS permissions
  FROM permissions
  JOIN actor_ids USING (actor_id, organization_id)
)
SELECT
  bl.user_id AS "user_id: crate::models::user::UserId",
  bl.organization_id AS "organization_id: crate::models::organization::OrganizationId",
  bl.active,
  bl.verified,
  COALESCE(
    (SELECT ARRAY_AGG(role_id) FILTER (WHERE role_id IS NOT NULL) FROM role_lookup),
    ARRAY[]::uuid[]
  ) AS "roles: Vec<RoleId>",
  COALESCE(permissions, ARRAY[]::text[]) AS "permissions: Vec<Permission>",
FROM base_lookup bl
LEFT JOIN role_lookup USING (user_id, organization_id)
LEFT JOIN permissions USING (permissions)
