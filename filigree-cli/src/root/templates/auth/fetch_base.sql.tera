WITH base_lookup AS (
  {% block base_lookup %}{% endblock base_lookup %}
),
role_lookup AS (
  SELECT role_id, organization_id
  FROM base_lookup
  JOIN user_roles USING (user_id, organization_id)
),
actor_ids AS (
{% block actor_ids %}
  SELECT user_id as actor_id, organization_id FROM base_lookup
  UNION ALL
  SELECT role_id as actor_id, organization_id FROM role_lookup
{% endblock actor_ids %}
),
{% block extra_ctes %}{% endblock extra_ctes %}
permissions AS (
  SELECT COALESCE(
    ARRAY_AGG(DISTINCT permission) FILTER (WHERE permission IS NOT NULL),
    ARRAY[]::text[]
  ) AS permissions
  FROM actor_ids
  LEFT JOIN permissions USING (actor_id, organization_id)
)
SELECT
  bl.user_id AS "user_id!: crate::models::user::UserId",
  bl.organization_id AS "organization_id!: crate::models::organization::OrganizationId",
  bl.active,
  COALESCE(
    (SELECT ARRAY_AGG(role_id) FILTER (WHERE role_id IS NOT NULL) FROM role_lookup),
    ARRAY[]::uuid[]
  ) AS "roles!: Vec<RoleId>",
  permissions as "permissions!: Vec<String>"
FROM base_lookup bl
LEFT JOIN permissions ON TRUE
