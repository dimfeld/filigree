use axum::{
    extract::{Path, State},
    http::StatusCode,
    response::IntoResponse,
    routing,
};
use maud::{html, Markup, DOCTYPE};

use crate::{
    auth::{has_any_permission, Authed},
    server::ServerState,
    Error,
};

mod forgot;
mod layout;
mod login;
mod logout;
mod reset;
{% for m in root_modules -%}
mod {m};
{% endfor %}

use layout::*;

async fn home(auth: Option<Authed>) -> impl IntoResponse {
    root_layout(&auth, "Home", html! { h1 { "Home" } })
}

pub fn create_routes() -> axum::Router<ServerState> {
    axum::Router::new()
        .route("/", routing::get(home))
        .route("/login", routing::get(self::login::login_page))
        .route("/logout", routing::get(self::logout::logout_page))
        .route("/forgot", routing::get(self::forgot::forgot_page))
        .route("/reset", routing::get(self::reset::reset_page))
        {% for m in root_modules -%}
        .merge({{m}}::create_routes())
        {% endfor %}
}
